
state 0
	$accept: .program $end 
	program: .    (1)

	.  reduce 1 (src line 69)

	program  goto 1

state 1
	$accept:  program.$end 
	program:  program.statement EOL 

	$end  accept
	TYPE  shift 11
	IDENTIFY  shift 14
	WHILE  shift 13
	PRINT  shift 10
	LBRACE  shift 12
	.  error

	statement  goto 2
	block  goto 6
	funcDefine  goto 8
	refExpression  goto 9
	assignStatement  goto 3
	printStatement  goto 4
	declareStatement  goto 5
	whileStatement  goto 7

state 2
	program:  program statement.EOL 

	EOL  shift 15
	.  error


state 3
	statement:  assignStatement.    (9)

	.  reduce 9 (src line 135)


state 4
	statement:  printStatement.    (10)

	.  reduce 10 (src line 137)


state 5
	statement:  declareStatement.    (11)

	.  reduce 11 (src line 138)


state 6
	statement:  block.    (12)

	.  reduce 12 (src line 139)


state 7
	statement:  whileStatement.    (13)

	.  reduce 13 (src line 140)


state 8
	statement:  funcDefine.    (14)

	.  reduce 14 (src line 141)


state 9
	assignStatement:  refExpression.assign 

	ASSIGN  shift 17
	.  error

	assign  goto 16

state 10
	printStatement:  PRINT.LPARENTHESIS expression RPARENTHESIS 

	LPARENTHESIS  shift 18
	.  error


state 11
	declareStatement:  TYPE.IDENTIFY 
	declareStatement:  TYPE.IDENTIFY assign 
	funcDefine:  TYPE.IDENTIFY LPARENTHESIS $$33 args RPARENTHESIS block 

	IDENTIFY  shift 19
	.  error


12: shift/reduce conflict (shift 20(0), red'n 32(0)) on RBRACE
state 12
	block:  LBRACE.RBRACE 
	block:  LBRACE.stmtList RBRACE 
	stmtList: .    (32)

	RBRACE  shift 20
	.  reduce 32 (src line 215)

	stmtList  goto 21

state 13
	whileStatement:  WHILE.expression block 

	IDENTIFY  shift 14
	INT_LITERAL  shift 27
	DOUBLE_LITERAL  shift 28
	ADD  shift 31
	SUB  shift 32
	NOT  shift 33
	LPARENTHESIS  shift 30
	.  error

	expression  goto 22
	atomExpression  goto 25
	unaryExpression  goto 24
	binaryOrAtomExpression  goto 23
	refExpression  goto 29
	unaryOperator  goto 26

state 14
	refExpression:  IDENTIFY.    (19)

	.  reduce 19 (src line 160)


state 15
	program:  program statement EOL.    (2)

	.  reduce 2 (src line 74)


state 16
	assignStatement:  refExpression assign.    (6)

	.  reduce 6 (src line 103)


state 17
	assign:  ASSIGN.expression 

	IDENTIFY  shift 14
	INT_LITERAL  shift 27
	DOUBLE_LITERAL  shift 28
	ADD  shift 31
	SUB  shift 32
	NOT  shift 33
	LPARENTHESIS  shift 30
	.  error

	expression  goto 34
	atomExpression  goto 25
	unaryExpression  goto 24
	binaryOrAtomExpression  goto 23
	refExpression  goto 29
	unaryOperator  goto 26

state 18
	printStatement:  PRINT LPARENTHESIS.expression RPARENTHESIS 

	IDENTIFY  shift 14
	INT_LITERAL  shift 27
	DOUBLE_LITERAL  shift 28
	ADD  shift 31
	SUB  shift 32
	NOT  shift 33
	LPARENTHESIS  shift 30
	.  error

	expression  goto 35
	atomExpression  goto 25
	unaryExpression  goto 24
	binaryOrAtomExpression  goto 23
	refExpression  goto 29
	unaryOperator  goto 26

state 19
	declareStatement:  TYPE IDENTIFY.    (4)
	declareStatement:  TYPE IDENTIFY.assign 
	funcDefine:  TYPE IDENTIFY.LPARENTHESIS $$33 args RPARENTHESIS block 

	ASSIGN  shift 17
	LPARENTHESIS  shift 37
	.  reduce 4 (src line 87)

	assign  goto 36

state 20
	block:  LBRACE RBRACE.    (29)

	.  reduce 29 (src line 200)


state 21
	block:  LBRACE stmtList.RBRACE 
	stmtList:  stmtList.statement 

	TYPE  shift 11
	IDENTIFY  shift 14
	WHILE  shift 13
	PRINT  shift 10
	LBRACE  shift 12
	RBRACE  shift 38
	.  error

	statement  goto 39
	block  goto 6
	funcDefine  goto 8
	refExpression  goto 9
	assignStatement  goto 3
	printStatement  goto 4
	declareStatement  goto 5
	whileStatement  goto 7

state 22
	whileStatement:  WHILE expression.block 

	LBRACE  shift 12
	.  error

	block  goto 40

state 23
	binaryOrAtomExpression:  binaryOrAtomExpression.ADD unaryExpression 
	binaryOrAtomExpression:  binaryOrAtomExpression.EQ unaryExpression 
	expression:  binaryOrAtomExpression.    (28)

	EQ  shift 42
	ADD  shift 41
	.  reduce 28 (src line 194)


state 24
	binaryOrAtomExpression:  unaryExpression.    (25)

	.  reduce 25 (src line 180)


state 25
	unaryExpression:  atomExpression.    (23)

	.  reduce 23 (src line 175)


state 26
	unaryExpression:  unaryOperator.atomExpression 

	IDENTIFY  shift 14
	INT_LITERAL  shift 27
	DOUBLE_LITERAL  shift 28
	LPARENTHESIS  shift 30
	.  error

	atomExpression  goto 43
	refExpression  goto 29

state 27
	atomExpression:  INT_LITERAL.    (15)

	.  reduce 15 (src line 145)


state 28
	atomExpression:  DOUBLE_LITERAL.    (16)

	.  reduce 16 (src line 149)


state 29
	atomExpression:  refExpression.    (17)

	.  reduce 17 (src line 152)


state 30
	atomExpression:  LPARENTHESIS.expression RPARENTHESIS 

	IDENTIFY  shift 14
	INT_LITERAL  shift 27
	DOUBLE_LITERAL  shift 28
	ADD  shift 31
	SUB  shift 32
	NOT  shift 33
	LPARENTHESIS  shift 30
	.  error

	expression  goto 44
	atomExpression  goto 25
	unaryExpression  goto 24
	binaryOrAtomExpression  goto 23
	refExpression  goto 29
	unaryOperator  goto 26

state 31
	unaryOperator:  ADD.    (20)

	.  reduce 20 (src line 169)


state 32
	unaryOperator:  SUB.    (21)

	.  reduce 21 (src line 171)


state 33
	unaryOperator:  NOT.    (22)

	.  reduce 22 (src line 172)


state 34
	assign:  ASSIGN expression.    (3)

	.  reduce 3 (src line 81)


state 35
	printStatement:  PRINT LPARENTHESIS expression.RPARENTHESIS 

	RPARENTHESIS  shift 45
	.  error


state 36
	declareStatement:  TYPE IDENTIFY assign.    (5)

	.  reduce 5 (src line 93)


state 37
	funcDefine:  TYPE IDENTIFY LPARENTHESIS.$$33 args RPARENTHESIS block 
	$$33: .    (33)

	.  reduce 33 (src line 223)

	$$33  goto 46

state 38
	block:  LBRACE stmtList RBRACE.    (30)

	.  reduce 30 (src line 205)


state 39
	stmtList:  stmtList statement.    (31)

	.  reduce 31 (src line 209)


state 40
	whileStatement:  WHILE expression block.    (8)

	.  reduce 8 (src line 124)


state 41
	binaryOrAtomExpression:  binaryOrAtomExpression ADD.unaryExpression 

	IDENTIFY  shift 14
	INT_LITERAL  shift 27
	DOUBLE_LITERAL  shift 28
	ADD  shift 31
	SUB  shift 32
	NOT  shift 33
	LPARENTHESIS  shift 30
	.  error

	atomExpression  goto 25
	unaryExpression  goto 47
	refExpression  goto 29
	unaryOperator  goto 26

state 42
	binaryOrAtomExpression:  binaryOrAtomExpression EQ.unaryExpression 

	IDENTIFY  shift 14
	INT_LITERAL  shift 27
	DOUBLE_LITERAL  shift 28
	ADD  shift 31
	SUB  shift 32
	NOT  shift 33
	LPARENTHESIS  shift 30
	.  error

	atomExpression  goto 25
	unaryExpression  goto 48
	refExpression  goto 29
	unaryOperator  goto 26

state 43
	unaryExpression:  unaryOperator atomExpression.    (24)

	.  reduce 24 (src line 177)


state 44
	atomExpression:  LPARENTHESIS expression.RPARENTHESIS 

	RPARENTHESIS  shift 49
	.  error


state 45
	printStatement:  PRINT LPARENTHESIS expression RPARENTHESIS.    (7)

	.  reduce 7 (src line 111)


state 46
	funcDefine:  TYPE IDENTIFY LPARENTHESIS $$33.args RPARENTHESIS block 
	args: .    (35)

	TYPE  shift 52
	.  reduce 35 (src line 248)

	args  goto 50
	declareStatement  goto 51

state 47
	binaryOrAtomExpression:  binaryOrAtomExpression ADD unaryExpression.    (26)

	.  reduce 26 (src line 182)


state 48
	binaryOrAtomExpression:  binaryOrAtomExpression EQ unaryExpression.    (27)

	.  reduce 27 (src line 187)


state 49
	atomExpression:  LPARENTHESIS expression RPARENTHESIS.    (18)

	.  reduce 18 (src line 155)


state 50
	funcDefine:  TYPE IDENTIFY LPARENTHESIS $$33 args.RPARENTHESIS block 
	args:  args.COMMA declareStatement 

	COMMA  shift 54
	RPARENTHESIS  shift 53
	.  error


state 51
	args:  declareStatement.    (36)

	.  reduce 36 (src line 253)


state 52
	declareStatement:  TYPE.IDENTIFY 
	declareStatement:  TYPE.IDENTIFY assign 

	IDENTIFY  shift 55
	.  error


state 53
	funcDefine:  TYPE IDENTIFY LPARENTHESIS $$33 args RPARENTHESIS.block 

	LBRACE  shift 12
	.  error

	block  goto 56

state 54
	args:  args COMMA.declareStatement 

	TYPE  shift 52
	.  error

	declareStatement  goto 57

state 55
	declareStatement:  TYPE IDENTIFY.    (4)
	declareStatement:  TYPE IDENTIFY.assign 

	ASSIGN  shift 17
	.  reduce 4 (src line 87)

	assign  goto 36

state 56
	funcDefine:  TYPE IDENTIFY LPARENTHESIS $$33 args RPARENTHESIS block.    (34)

	.  reduce 34 (src line 224)


state 57
	args:  args COMMA declareStatement.    (37)

	.  reduce 37 (src line 259)


39 terminals, 19 nonterminals
38 grammar rules, 58/8000 states
1 shift/reduce, 0 reduce/reduce conflicts reported
68 working sets used
memory: parser 77/120000
46 extra closures
76 shift entries, 1 exceptions
32 goto entries
29 entries saved by goto default
Optimizer space used: output 71/120000
71 table entries, 1 zero
maximum spread: 39, maximum offset: 54
